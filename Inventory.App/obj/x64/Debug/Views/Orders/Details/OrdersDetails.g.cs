#pragma checksum "C:\WH\InventorySample\src\Inventory.App\Views\Orders\Details\OrdersDetails.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F6BCE60405D1061D0DF92D3BF3D8CCB0BD181F220F983A4A7E7E97BDB4368B54"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrdersDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Views_OrdersCard_Item(global::Inventory.Views.OrdersCard obj, global::Inventory.Models.OrderModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.Models.OrderModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.Models.OrderModel), targetNullValue);
                }
                obj.Item = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.Date = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_MinDate(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.DateTimeOffset value)
            {
                obj.MinDate = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersDetails_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersDetails_Bindings
        {
            private global::Inventory.ViewModels.OrderDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Inventory.Controls.FormTextBox obj4;
            private global::Inventory.Controls.FormTextBox obj5;
            private global::Inventory.Controls.FormComboBox obj6;
            private global::Inventory.Controls.FormComboBox obj7;
            private global::Inventory.Controls.FormComboBox obj8;
            private global::Inventory.Controls.FormCalendarDatePicker obj9;
            private global::Inventory.Controls.FormCalendarDatePicker obj10;
            private global::Inventory.Controls.FormComboBox obj11;
            private global::Inventory.Controls.FormTextBox obj12;
            private global::Inventory.Controls.FormTextBox obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj6SelectedValueDisabled = false;
            private static bool isobj7ItemsSourceDisabled = false;
            private static bool isobj7SelectedValueDisabled = false;
            private static bool isobj8ItemsSourceDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj8VisibilityDisabled = false;
            private static bool isobj9DateDisabled = false;
            private static bool isobj9MinDateDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10DateDisabled = false;
            private static bool isobj10MinDateDisabled = false;
            private static bool isobj10VisibilityDisabled = false;
            private static bool isobj11ItemsSourceDisabled = false;
            private static bool isobj11SelectedValueDisabled = false;
            private static bool isobj11VisibilityDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;

            private OrdersDetails_obj3_BindingsTracking bindingsTracking;

            public OrdersDetails_obj3_Bindings()
            {
                this.bindingsTracking = new OrdersDetails_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 61)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 16 && columnNumber == 58)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 62)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 41)
                {
                    isobj6SelectedValueDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 56)
                {
                    isobj7ItemsSourceDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 41)
                {
                    isobj7SelectedValueDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 62)
                {
                    isobj8ItemsSourceDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 41)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 30 && columnNumber == 41)
                {
                    isobj8VisibilityDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 74)
                {
                    isobj9DateDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 41)
                {
                    isobj9MinDateDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 41)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 76)
                {
                    isobj10DateDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 41)
                {
                    isobj10MinDateDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 41)
                {
                    isobj10VisibilityDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 62)
                {
                    isobj11ItemsSourceDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 41)
                {
                    isobj11SelectedValueDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 41)
                {
                    isobj11VisibilityDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 69)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 19 && columnNumber == 64)
                {
                    isobj13TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\Orders\Details\OrdersDetails.xaml line 14
                        this.obj3 = new global::System.WeakReference((global::Inventory.Controls.FluidGrid)target);
                        break;
                    case 4: // Views\Orders\Details\OrdersDetails.xaml line 15
                        this.obj4 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\Orders\Details\OrdersDetails.xaml line 16
                        this.obj5 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\Orders\Details\OrdersDetails.xaml line 21
                        this.obj6 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\Orders\Details\OrdersDetails.xaml line 24
                        this.obj7 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\Orders\Details\OrdersDetails.xaml line 27
                        this.obj8 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\Orders\Details\OrdersDetails.xaml line 41
                        this.obj9 = (global::Inventory.Controls.FormCalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\Orders\Details\OrdersDetails.xaml line 33
                        this.obj10 = (global::Inventory.Controls.FormCalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\Orders\Details\OrdersDetails.xaml line 36
                        this.obj11 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\Orders\Details\OrdersDetails.xaml line 18
                        this.obj12 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\Orders\Details\OrdersDetails.xaml line 19
                        this.obj13 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Inventory.Controls.FluidGrid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.OrderDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrdersDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.OrderDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.OrderDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem(obj.EditableItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables(obj.LookupTables, phase);
                    }
                }
            }
            private void Update_EditableItem(global::Inventory.Models.OrderModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_ShipAddress(obj.ShipAddress, phase);
                        this.Update_EditableItem_ShipCity(obj.ShipCity, phase);
                        this.Update_EditableItem_ShipCountryCode(obj.ShipCountryCode, phase);
                        this.Update_EditableItem_Status(obj.Status, phase);
                        this.Update_EditableItem_PaymentType(obj.PaymentType, phase);
                        this.Update_EditableItem_CanEditPayment(obj.CanEditPayment, phase);
                        this.Update_EditableItem_DeliveredDate(obj.DeliveredDate, phase);
                        this.Update_EditableItem_ShippedDate(obj.ShippedDate, phase);
                        this.Update_EditableItem_CanEditDelivery(obj.CanEditDelivery, phase);
                        this.Update_EditableItem_OrderDate(obj.OrderDate, phase);
                        this.Update_EditableItem_CanEditShipping(obj.CanEditShipping, phase);
                        this.Update_EditableItem_ShipVia(obj.ShipVia, phase);
                        this.Update_EditableItem_ShipPostalCode(obj.ShipPostalCode, phase);
                        this.Update_EditableItem_ShipRegion(obj.ShipRegion, phase);
                    }
                }
            }
            private void Update_EditableItem_ShipAddress(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 15
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_EditableItem_ShipCity(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 16
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_LookupTables(global::Inventory.Services.ILookupTables obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables_CountryCodes(obj.CountryCodes, phase);
                        this.Update_LookupTables_OrderStatus(obj.OrderStatus, phase);
                        this.Update_LookupTables_PaymentTypes(obj.PaymentTypes, phase);
                        this.Update_LookupTables_Shippers(obj.Shippers, phase);
                    }
                }
            }
            private void Update_LookupTables_CountryCodes(global::System.Collections.Generic.IList<global::Inventory.Models.CountryCodeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 21
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_EditableItem_ShipCountryCode(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 21
                    if (!isobj6SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj6, obj, null);
                    }
                }
            }
            private void Update_LookupTables_OrderStatus(global::System.Collections.Generic.IList<global::Inventory.Models.OrderStatusModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 24
                    if (!isobj7ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj7, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Status(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 24
                    if (!isobj7SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj7, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_LookupTables_PaymentTypes(global::System.Collections.Generic.IList<global::Inventory.Models.PaymentTypeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 27
                    if (!isobj8ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                    }
                }
            }
            private void Update_EditableItem_PaymentType(global::System.Nullable<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 27
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_CanEditPayment(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_EditableItem_CanEditPayment_Cast_CanEditPayment_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_EditableItem_CanEditPayment_Cast_CanEditPayment_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 27
                    if (!isobj8VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, obj);
                    }
                }
            }
            private void Update_EditableItem_DeliveredDate(global::System.Nullable<global::System.DateTimeOffset> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 41
                    if (!isobj9DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj9, obj, null);
                    }
                }
            }
            private void Update_EditableItem_ShippedDate(global::System.Nullable<global::System.DateTimeOffset> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 41
                    if (!isobj9MinDateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_MinDate(this.obj9, (global::System.DateTimeOffset)this.LookupConverter("DateTimeOffsetConverter").Convert(obj, typeof(global::System.DateTimeOffset), null, null));
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 33
                    if (!isobj10DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj10, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CanEditDelivery(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_EditableItem_CanEditDelivery_Cast_CanEditDelivery_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_EditableItem_CanEditDelivery_Cast_CanEditDelivery_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 41
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, obj);
                    }
                }
            }
            private void Update_EditableItem_OrderDate(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 33
                    if (!isobj10MinDateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_MinDate(this.obj10, (global::System.DateTimeOffset)this.LookupConverter("DateTimeOffsetConverter").Convert(obj, typeof(global::System.DateTimeOffset), null, null));
                    }
                }
            }
            private void Update_EditableItem_CanEditShipping(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_EditableItem_CanEditShipping_Cast_CanEditShipping_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_EditableItem_CanEditShipping_Cast_CanEditShipping_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 33
                    if (!isobj10VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj10, obj);
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 36
                    if (!isobj11VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, obj);
                    }
                }
            }
            private void Update_LookupTables_Shippers(global::System.Collections.Generic.IList<global::Inventory.Models.ShipperModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 36
                    if (!isobj11ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                    }
                }
            }
            private void Update_EditableItem_ShipVia(global::System.Nullable<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 36
                    if (!isobj11SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj11, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_ShipPostalCode(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 18
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_EditableItem_ShipRegion(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 19
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipAddress = this.obj4.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipCity = this.obj5.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipCountryCode = (global::System.String)this.obj6.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Status = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj7.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.PaymentType = (global::System.Nullable<global::System.Int32>)this.LookupConverter("Int32Converter").ConvertBack(this.obj8.SelectedValue, typeof(global::System.Nullable<global::System.Int32>), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.DeliveredDate = this.obj9.Date;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShippedDate = this.obj10.Date;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipVia = (global::System.Nullable<global::System.Int32>)this.LookupConverter("Int32Converter").ConvertBack(this.obj11.SelectedValue, typeof(global::System.Nullable<global::System.Int32>), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipPostalCode = this.obj12.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.ShipRegion = this.obj13.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersDetails_obj3_BindingsTracking
            {
                private global::System.WeakReference<OrdersDetails_obj3_Bindings> weakRefToBindingObj; 

                public OrdersDetails_obj3_BindingsTracking(OrdersDetails_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersDetails_obj3_Bindings>(obj);
                }

                public OrdersDetails_obj3_Bindings TryGetBindingObject()
                {
                    OrdersDetails_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_EditableItem(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.OrderDetailsViewModel obj)
                {
                    OrdersDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderModel obj = sender as global::Inventory.Models.OrderModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_ShipAddress(obj.ShipAddress, DATA_CHANGED);
                                bindings.Update_EditableItem_ShipCity(obj.ShipCity, DATA_CHANGED);
                                bindings.Update_EditableItem_ShipCountryCode(obj.ShipCountryCode, DATA_CHANGED);
                                bindings.Update_EditableItem_Status(obj.Status, DATA_CHANGED);
                                bindings.Update_EditableItem_PaymentType(obj.PaymentType, DATA_CHANGED);
                                bindings.Update_EditableItem_CanEditPayment(obj.CanEditPayment, DATA_CHANGED);
                                bindings.Update_EditableItem_DeliveredDate(obj.DeliveredDate, DATA_CHANGED);
                                bindings.Update_EditableItem_ShippedDate(obj.ShippedDate, DATA_CHANGED);
                                bindings.Update_EditableItem_CanEditDelivery(obj.CanEditDelivery, DATA_CHANGED);
                                bindings.Update_EditableItem_OrderDate(obj.OrderDate, DATA_CHANGED);
                                bindings.Update_EditableItem_CanEditShipping(obj.CanEditShipping, DATA_CHANGED);
                                bindings.Update_EditableItem_ShipVia(obj.ShipVia, DATA_CHANGED);
                                bindings.Update_EditableItem_ShipPostalCode(obj.ShipPostalCode, DATA_CHANGED);
                                bindings.Update_EditableItem_ShipRegion(obj.ShipRegion, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ShipAddress":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipAddress(obj.ShipAddress, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShipCity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipCity(obj.ShipCity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShipCountryCode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipCountryCode(obj.ShipCountryCode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Status":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Status(obj.Status, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PaymentType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_PaymentType(obj.PaymentType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanEditPayment":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CanEditPayment(obj.CanEditPayment, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DeliveredDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_DeliveredDate(obj.DeliveredDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShippedDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShippedDate(obj.ShippedDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanEditDelivery":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CanEditDelivery(obj.CanEditDelivery, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OrderDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_OrderDate(obj.OrderDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanEditShipping":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CanEditShipping(obj.CanEditShipping, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShipVia":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipVia(obj.ShipVia, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShipPostalCode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipPostalCode(obj.ShipPostalCode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShipRegion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_ShipRegion(obj.ShipRegion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderModel cache_EditableItem = null;
                public void UpdateChildListeners_EditableItem(global::Inventory.Models.OrderModel obj)
                {
                    if (obj != cache_EditableItem)
                    {
                        if (cache_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem).PropertyChanged -= PropertyChanged_EditableItem;
                            cache_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_5(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Inventory.Controls.FormCalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Inventory.Controls.FormCalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_13(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Text();
                        }
                    };
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersDetails_Bindings
        {
            private global::Inventory.Views.OrdersDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj14;
            private global::Inventory.Controls.Details obj15;
            private global::Inventory.Views.OrdersCard obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14VisibilityDisabled = false;
            private static bool isobj15DetailsContentDisabled = false;
            private static bool isobj15IsEditModeDisabled = false;
            private static bool isobj15EditCommandDisabled = false;
            private static bool isobj15DeleteCommandDisabled = false;
            private static bool isobj15SaveCommandDisabled = false;
            private static bool isobj15CancelCommandDisabled = false;
            private static bool isobj16ItemDisabled = false;

            private OrdersDetails_obj1_BindingsTracking bindingsTracking;

            public OrdersDetails_obj1_Bindings()
            {
                this.bindingsTracking = new OrdersDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 48 && columnNumber == 11)
                {
                    isobj14VisibilityDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 27)
                {
                    isobj15DetailsContentDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 27)
                {
                    isobj15IsEditModeDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 27)
                {
                    isobj15EditCommandDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 27)
                {
                    isobj15DeleteCommandDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 27)
                {
                    isobj15SaveCommandDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 27)
                {
                    isobj15CancelCommandDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 45)
                {
                    isobj16ItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // Views\Orders\Details\OrdersDetails.xaml line 48
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 15: // Views\Orders\Details\OrdersDetails.xaml line 60
                        this.obj15 = (global::Inventory.Controls.Details)target;
                        break;
                    case 16: // Views\Orders\Details\OrdersDetails.xaml line 57
                        this.obj16 = (global::Inventory.Views.OrdersCard)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IOrdersDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrdersDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrdersDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.OrderDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Inventory.Models.OrderModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 57
                    if (!isobj16ItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_OrdersCard_Item(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_IsEmpty(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 48
                    if (!isobj14VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj14, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("InverseBoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj15, obj);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 60
                    if (!isobj15CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj15, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrdersDetails_obj1_Bindings> weakRefToBindingObj; 

                public OrdersDetails_obj1_BindingsTracking(OrdersDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersDetails_obj1_Bindings>(obj);
                }

                public OrdersDetails_obj1_Bindings TryGetBindingObject()
                {
                    OrdersDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrdersDetails obj = sender as global::Inventory.Views.OrdersDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrdersDetails obj)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrdersDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrdersDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.OrderDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderModel obj = sender as global::Inventory.Models.OrderModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEmpty":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Inventory.Models.OrderModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 15: // Views\Orders\Details\OrdersDetails.xaml line 60
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Orders\Details\OrdersDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrdersDetails_obj1_Bindings bindings = new OrdersDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // Views\Orders\Details\OrdersDetails.xaml line 14
                {                    
                    global::Inventory.Controls.FluidGrid element3 = (global::Inventory.Controls.FluidGrid)target;
                    OrdersDetails_obj3_Bindings bindings = new OrdersDetails_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

