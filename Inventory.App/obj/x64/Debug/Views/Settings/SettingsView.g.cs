#pragma checksum "C:\WH\InventorySample\src\Inventory.App\Views\Settings\SettingsView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "318E1CBC92C4750EAB78C2AD48E6F8A3D5623E67AB83AB3AF53D25D1BA4AAFCF"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class SettingsView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISettingsView_Bindings
        {
            private global::Inventory.Views.SettingsView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ContentControl obj2;
            private global::Windows.UI.Xaml.Controls.Button obj3;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj4;
            private global::Windows.UI.Xaml.Controls.RadioButton obj5;
            private global::Windows.UI.Xaml.Controls.RadioButton obj6;
            private global::Windows.UI.Xaml.Controls.ContentControl obj7;
            private global::Windows.UI.Xaml.Controls.TextBox obj8;
            private global::Windows.UI.Xaml.Controls.Button obj9;
            private global::Windows.UI.Xaml.Controls.Button obj10;
            private global::Windows.UI.Xaml.Controls.ContentControl obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2IsEnabledDisabled = false;
            private static bool isobj3CommandDisabled = false;
            private static bool isobj4IsOnDisabled = false;
            private static bool isobj5IsCheckedDisabled = false;
            private static bool isobj6IsCheckedDisabled = false;
            private static bool isobj7IsEnabledDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9CommandDisabled = false;
            private static bool isobj10CommandDisabled = false;
            private static bool isobj11IsEnabledDisabled = false;
            private static bool isobj12CommandDisabled = false;
            private static bool isobj13TextDisabled = false;

            private SettingsView_obj1_BindingsTracking bindingsTracking;

            public SettingsView_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 11 && columnNumber == 25)
                {
                    isobj2IsEnabledDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 76)
                {
                    isobj3CommandDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 27)
                {
                    isobj4IsOnDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 70)
                {
                    isobj5IsCheckedDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 74)
                {
                    isobj6IsCheckedDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 41)
                {
                    isobj7IsEnabledDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 42)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 75)
                {
                    isobj9CommandDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 71)
                {
                    isobj10CommandDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 41)
                {
                    isobj11IsEnabledDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 62)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 32)
                {
                    isobj13TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Settings\SettingsView.xaml line 11
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 3: // Views\Settings\SettingsView.xaml line 56
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 4: // Views\Settings\SettingsView.xaml line 60
                        this.obj4 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\Settings\SettingsView.xaml line 28
                        this.obj5 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\Settings\SettingsView.xaml line 38
                        this.obj6 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\Settings\SettingsView.xaml line 39
                        this.obj7 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 8: // Views\Settings\SettingsView.xaml line 45
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\Settings\SettingsView.xaml line 48
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 10: // Views\Settings\SettingsView.xaml line 49
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 11: // Views\Settings\SettingsView.xaml line 29
                        this.obj11 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 12: // Views\Settings\SettingsView.xaml line 34
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 13: // Views\Settings\SettingsView.xaml line 21
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.SettingsView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.SettingsView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.SettingsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsBusy(obj.IsBusy, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SaveChangesCommand(obj.SaveChangesCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, phase);
                        this.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, phase);
                        this.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, phase);
                        this.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ValidateSqlConnectionCommand(obj.ValidateSqlConnectionCommand, phase);
                        this.Update_ViewModel_CreateDatabaseCommand(obj.CreateDatabaseCommand, phase);
                        this.Update_ViewModel_ResetLocalDataCommand(obj.ResetLocalDataCommand, phase);
                        this.Update_ViewModel_Version(obj.Version, phase);
                    }
                }
            }
            private void Update_ViewModel_IsBusy(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 11
                    if (!isobj2IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj2, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_ViewModel_SaveChangesCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 56
                    if (!isobj3CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsRandomErrorsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 60
                    if (!isobj4IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj4, obj);
                    }
                }
            }
            private void Update_ViewModel_IsLocalProvider(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 28
                    if (!isobj5IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj5, obj, null);
                    }
                    // Views\Settings\SettingsView.xaml line 29
                    if (!isobj11IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj11, obj);
                    }
                }
            }
            private void Update_ViewModel_IsSqlProvider(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 38
                    if (!isobj6IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj6, obj, null);
                    }
                    // Views\Settings\SettingsView.xaml line 39
                    if (!isobj7IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj7, obj);
                    }
                }
            }
            private void Update_ViewModel_SqlConnectionString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 45
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ValidateSqlConnectionCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 48
                    if (!isobj9CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CreateDatabaseCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 49
                    if (!isobj10CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ResetLocalDataCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 34
                    if (!isobj12CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Version(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 21
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_4_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsRandomErrorsEnabled = this.obj4.IsOn;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsLocalProvider = (global::System.Boolean)this.obj5.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsSqlProvider = (global::System.Boolean)this.obj6.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SqlConnectionString = this.obj8.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsView_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsView_obj1_Bindings> weakRefToBindingObj; 

                public SettingsView_obj1_BindingsTracking(SettingsView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsView_obj1_Bindings>(obj);
                }

                public SettingsView_obj1_Bindings TryGetBindingObject()
                {
                    SettingsView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.SettingsViewModel obj = sender as global::Inventory.ViewModels.SettingsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                bindings.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, DATA_CHANGED);
                                bindings.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, DATA_CHANGED);
                                bindings.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, DATA_CHANGED);
                                bindings.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsBusy":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsRandomErrorsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsLocalProvider":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSqlProvider":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SqlConnectionString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.SettingsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.SettingsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.RadioButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Windows.UI.Xaml.Controls.RadioButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Settings\SettingsView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SettingsView_obj1_Bindings bindings = new SettingsView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

