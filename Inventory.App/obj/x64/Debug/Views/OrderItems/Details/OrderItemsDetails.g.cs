#pragma checksum "C:\WH\InventorySample\src\Inventory.App\Views\OrderItems\Details\OrderItemsDetails.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "542B17494DE65A4C693EBEEC0EF0A6431C29669B7940CB3A4F0F03DF96D2F1D0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrderItemsDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Inventory_Views_OrderItemsCard_Item(global::Inventory.Views.OrderItemsCard obj, global::Inventory.Models.OrderItemModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.Models.OrderItemModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.Models.OrderItemModel), targetNullValue);
                }
                obj.Item = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderItemsDetails_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderItemsDetails_Bindings
        {
            private global::Inventory.ViewModels.OrderItemDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Inventory.Controls.FormTextBox obj4;
            private global::Inventory.Controls.FormTextBox obj5;
            private global::Inventory.Controls.FormTextBox obj6;
            private global::Inventory.Controls.FormTextBox obj7;
            private global::Inventory.Controls.FormComboBox obj8;
            private global::Inventory.Controls.FormTextBox obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8ItemsSourceDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj9TextDisabled = false;

            private OrderItemsDetails_obj3_BindingsTracking bindingsTracking;

            public OrderItemsDetails_obj3_Bindings()
            {
                this.bindingsTracking = new OrderItemsDetails_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 57)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 16 && columnNumber == 59)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 57)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 19 && columnNumber == 57)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 58)
                {
                    isobj8ItemsSourceDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 49)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 54)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\OrderItems\Details\OrderItemsDetails.xaml line 14
                        this.obj3 = new global::System.WeakReference((global::Inventory.Controls.FluidGrid)target);
                        break;
                    case 4: // Views\OrderItems\Details\OrderItemsDetails.xaml line 15
                        this.obj4 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\OrderItems\Details\OrderItemsDetails.xaml line 16
                        this.obj5 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    case 6: // Views\OrderItems\Details\OrderItemsDetails.xaml line 18
                        this.obj6 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\OrderItems\Details\OrderItemsDetails.xaml line 19
                        this.obj7 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    case 8: // Views\OrderItems\Details\OrderItemsDetails.xaml line 21
                        this.obj8 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\OrderItems\Details\OrderItemsDetails.xaml line 24
                        this.obj9 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Inventory.Controls.FluidGrid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.OrderItemDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrderItemsDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.OrderItemDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.OrderItemDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem(obj.EditableItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables(obj.LookupTables, phase);
                    }
                }
            }
            private void Update_EditableItem(global::Inventory.Models.OrderItemModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_Quantity(obj.Quantity, phase);
                        this.Update_EditableItem_UnitPrice(obj.UnitPrice, phase);
                        this.Update_EditableItem_Discount(obj.Discount, phase);
                        this.Update_EditableItem_Subtotal(obj.Subtotal, phase);
                        this.Update_EditableItem_TaxType(obj.TaxType, phase);
                        this.Update_EditableItem_Total(obj.Total, phase);
                    }
                }
            }
            private void Update_EditableItem_Quantity(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 15
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, (global::System.String)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_UnitPrice(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 16
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Discount(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 18
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Subtotal(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 19
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj7, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_LookupTables(global::Inventory.Services.ILookupTables obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables_TaxTypes(obj.TaxTypes, phase);
                    }
                }
            }
            private void Update_LookupTables_TaxTypes(global::System.Collections.Generic.IList<global::Inventory.Models.TaxTypeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 21
                    if (!isobj8ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                    }
                }
            }
            private void Update_EditableItem_TaxType(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 21
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Total(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 24
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Quantity = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj4.Text, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Discount = (global::System.Decimal)this.LookupConverter("DecimalConverter").ConvertBack(this.obj6.Text, typeof(global::System.Decimal), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.TaxType = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj8.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderItemsDetails_obj3_BindingsTracking
            {
                private global::System.WeakReference<OrderItemsDetails_obj3_Bindings> weakRefToBindingObj; 

                public OrderItemsDetails_obj3_BindingsTracking(OrderItemsDetails_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderItemsDetails_obj3_Bindings>(obj);
                }

                public OrderItemsDetails_obj3_Bindings TryGetBindingObject()
                {
                    OrderItemsDetails_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_EditableItem(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderItemsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderItemDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderItemDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.OrderItemDetailsViewModel obj)
                {
                    OrderItemsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderItemsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderItemModel obj = sender as global::Inventory.Models.OrderItemModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_Quantity(obj.Quantity, DATA_CHANGED);
                                bindings.Update_EditableItem_UnitPrice(obj.UnitPrice, DATA_CHANGED);
                                bindings.Update_EditableItem_Discount(obj.Discount, DATA_CHANGED);
                                bindings.Update_EditableItem_Subtotal(obj.Subtotal, DATA_CHANGED);
                                bindings.Update_EditableItem_TaxType(obj.TaxType, DATA_CHANGED);
                                bindings.Update_EditableItem_Total(obj.Total, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Quantity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Quantity(obj.Quantity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UnitPrice":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_UnitPrice(obj.UnitPrice, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Discount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Discount(obj.Discount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Subtotal":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Subtotal(obj.Subtotal, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TaxType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_TaxType(obj.TaxType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Total":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Total(obj.Total, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderItemModel cache_EditableItem = null;
                public void UpdateChildListeners_EditableItem(global::Inventory.Models.OrderItemModel obj)
                {
                    if (obj != cache_EditableItem)
                    {
                        if (cache_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem).PropertyChanged -= PropertyChanged_EditableItem;
                            cache_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_8(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderItemsDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderItemsDetails_Bindings
        {
            private global::Inventory.Views.OrderItemsDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Inventory.Controls.Details obj10;
            private global::Inventory.Views.OrderItemsCard obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10DetailsContentDisabled = false;
            private static bool isobj10IsEditModeDisabled = false;
            private static bool isobj10EditCommandDisabled = false;
            private static bool isobj10DeleteCommandDisabled = false;
            private static bool isobj10SaveCommandDisabled = false;
            private static bool isobj10CancelCommandDisabled = false;
            private static bool isobj11ItemDisabled = false;

            private OrderItemsDetails_obj1_BindingsTracking bindingsTracking;

            public OrderItemsDetails_obj1_Bindings()
            {
                this.bindingsTracking = new OrderItemsDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 40 && columnNumber == 27)
                {
                    isobj10DetailsContentDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 27)
                {
                    isobj10IsEditModeDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 27)
                {
                    isobj10EditCommandDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 27)
                {
                    isobj10DeleteCommandDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 27)
                {
                    isobj10SaveCommandDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 27)
                {
                    isobj10CancelCommandDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 49)
                {
                    isobj11ItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                        this.obj10 = (global::Inventory.Controls.Details)target;
                        break;
                    case 11: // Views\OrderItems\Details\OrderItemsDetails.xaml line 36
                        this.obj11 = (global::Inventory.Views.OrderItemsCard)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IOrderItemsDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrderItemsDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrderItemsDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.OrderItemDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj10, obj);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                    if (!isobj10CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Inventory.Models.OrderItemModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderItems\Details\OrderItemsDetails.xaml line 36
                    if (!isobj11ItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_OrderItemsCard_Item(this.obj11, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderItemsDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrderItemsDetails_obj1_Bindings> weakRefToBindingObj; 

                public OrderItemsDetails_obj1_BindingsTracking(OrderItemsDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderItemsDetails_obj1_Bindings>(obj);
                }

                public OrderItemsDetails_obj1_Bindings TryGetBindingObject()
                {
                    OrderItemsDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrderItemsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrderItemsDetails obj = sender as global::Inventory.Views.OrderItemsDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrderItemsDetails obj)
                {
                    OrderItemsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrderItemsDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrderItemsDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderItemsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderItemDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderItemDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderItemDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.OrderItemDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderItemsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderItemModel obj = sender as global::Inventory.Models.OrderItemModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderItemModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Inventory.Models.OrderItemModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 10: // Views\OrderItems\Details\OrderItemsDetails.xaml line 39
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\OrderItems\Details\OrderItemsDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrderItemsDetails_obj1_Bindings bindings = new OrderItemsDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // Views\OrderItems\Details\OrderItemsDetails.xaml line 14
                {                    
                    global::Inventory.Controls.FluidGrid element3 = (global::Inventory.Controls.FluidGrid)target;
                    OrderItemsDetails_obj3_Bindings bindings = new OrderItemsDetails_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

