#pragma checksum "C:\WH\InventorySample\src\Inventory.App\Views\AppLogs\Details\AppLogsDetails.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "5C32396B6D19646920F464FE607397DC1B55730757B9B80EB7EF11400512C086"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class AppLogsDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Controls_Details_CanGoBack(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.CanGoBack = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_BackCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.BackCommand = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(global::Windows.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_IconElement_Foreground(global::Windows.UI.Xaml.Controls.IconElement obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AppLogsDetails_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAppLogsDetails_Bindings
        {
            private global::Inventory.ViewModels.AppLogDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Inventory.Controls.FormTextBox obj4;
            private global::Inventory.Controls.FormTextBox obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;

            private AppLogsDetails_obj3_BindingsTracking bindingsTracking;

            public AppLogsDetails_obj3_Bindings()
            {
                this.bindingsTracking = new AppLogsDetails_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 14 && columnNumber == 56)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 15 && columnNumber == 60)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\AppLogs\Details\AppLogsDetails.xaml line 13
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // Views\AppLogs\Details\AppLogsDetails.xaml line 14
                        this.obj4 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\AppLogs\Details\AppLogsDetails.xaml line 15
                        this.obj5 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.AppLogDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAppLogsDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.AppLogDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.AppLogDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item(obj.Item, phase);
                    }
                }
            }
            private void Update_Item(global::Inventory.Models.AppLogModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Message(obj.Message, phase);
                        this.Update_Item_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_Item_Message(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 14
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_Item_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 15
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.Item != null)
                        {
                            this.dataRoot.Item.Message = this.obj4.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.Item != null)
                        {
                            this.dataRoot.Item.Description = this.obj5.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AppLogsDetails_obj3_BindingsTracking
            {
                private global::System.WeakReference<AppLogsDetails_obj3_Bindings> weakRefToBindingObj; 

                public AppLogsDetails_obj3_BindingsTracking(AppLogsDetails_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AppLogsDetails_obj3_Bindings>(obj);
                }

                public AppLogsDetails_obj3_Bindings TryGetBindingObject()
                {
                    AppLogsDetails_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Item(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AppLogsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.AppLogDetailsViewModel obj = sender as global::Inventory.ViewModels.AppLogDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item(obj.Item, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.AppLogDetailsViewModel obj)
                {
                    AppLogsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AppLogsDetails_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.AppLogModel obj = sender as global::Inventory.Models.AppLogModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item_Message(obj.Message, DATA_CHANGED);
                                bindings.Update_Item_Description(obj.Description, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Message":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Message(obj.Message, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Description":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Description(obj.Description, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.AppLogModel cache_Item = null;
                public void UpdateChildListeners_Item(global::Inventory.Models.AppLogModel obj)
                {
                    if (obj != cache_Item)
                    {
                        if (cache_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Item).PropertyChanged -= PropertyChanged_Item;
                            cache_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Item;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_5(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AppLogsDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAppLogsDetails_Bindings
        {
            private global::Inventory.Views.AppLogsDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Inventory.Controls.Details obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.FontIcon obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6DetailsContentDisabled = false;
            private static bool isobj6CanGoBackDisabled = false;
            private static bool isobj6IsEditModeDisabled = false;
            private static bool isobj6BackCommandDisabled = false;
            private static bool isobj6EditCommandDisabled = false;
            private static bool isobj6DeleteCommandDisabled = false;
            private static bool isobj6SaveCommandDisabled = false;
            private static bool isobj6CancelCommandDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13GlyphDisabled = false;
            private static bool isobj13ForegroundDisabled = false;
            private static bool isobj14TextDisabled = false;

            private AppLogsDetails_obj1_BindingsTracking bindingsTracking;

            public AppLogsDetails_obj1_Bindings()
            {
                this.bindingsTracking = new AppLogsDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 62 && columnNumber == 27)
                {
                    isobj6DetailsContentDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 27)
                {
                    isobj6CanGoBackDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 27)
                {
                    isobj6IsEditModeDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 27)
                {
                    isobj6BackCommandDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 27)
                {
                    isobj6EditCommandDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 27)
                {
                    isobj6DeleteCommandDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 27)
                {
                    isobj6SaveCommandDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 27)
                {
                    isobj6CancelCommandDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 58)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 58)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 58)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 58)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 58)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 58)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 31)
                {
                    isobj13GlyphDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 31)
                {
                    isobj13ForegroundDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 32)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                        this.obj6 = (global::Inventory.Controls.Details)target;
                        break;
                    case 7: // Views\AppLogs\Details\AppLogsDetails.xaml line 42
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Views\AppLogs\Details\AppLogsDetails.xaml line 45
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\AppLogs\Details\AppLogsDetails.xaml line 48
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // Views\AppLogs\Details\AppLogsDetails.xaml line 51
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // Views\AppLogs\Details\AppLogsDetails.xaml line 54
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Views\AppLogs\Details\AppLogsDetails.xaml line 57
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\AppLogs\Details\AppLogsDetails.xaml line 31
                        this.obj13 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 14: // Views\AppLogs\Details\AppLogsDetails.xaml line 36
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAppLogsDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.AppLogsDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.AppLogsDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.AppLogDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CanGoBack(obj.CanGoBack, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_BackCommand(obj.BackCommand, phase);
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CanGoBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6CanGoBackDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CanGoBack(this.obj6, obj);
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj6, obj);
                    }
                }
            }
            private void Update_ViewModel_BackCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6BackCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_BackCommand(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                    if (!isobj6CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Inventory.Models.AppLogModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_Id(obj.Id, phase);
                        this.Update_ViewModel_Item_DateTime(obj.DateTime, phase);
                        this.Update_ViewModel_Item_User(obj.User, phase);
                        this.Update_ViewModel_Item_Source(obj.Source, phase);
                        this.Update_ViewModel_Item_Action(obj.Action, phase);
                        this.Update_ViewModel_Item_Type(obj.Type, phase);
                    }
                }
            }
            private void Update_ViewModel_Item_Id(global::System.Int64 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 42
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_Item_DateTime(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 45
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, (global::System.String)this.LookupConverter("DateTimeFormatConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 48
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, (global::System.String)this.LookupConverter("DateTimeFormatConverter").Convert(obj, typeof(global::System.String), "longtime", null), null);
                    }
                }
            }
            private void Update_ViewModel_Item_User(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 51
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_Source(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 54
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_Action(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 57
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_Type(global::Inventory.Data.LogType obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 31
                    if (!isobj13GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(this.obj13, (global::System.String)this.LookupConverter("LogTypeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 31
                    if (!isobj13ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj13, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("LogTypeConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\AppLogs\Details\AppLogsDetails.xaml line 36
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AppLogsDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<AppLogsDetails_obj1_Bindings> weakRefToBindingObj; 

                public AppLogsDetails_obj1_BindingsTracking(AppLogsDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AppLogsDetails_obj1_Bindings>(obj);
                }

                public AppLogsDetails_obj1_Bindings TryGetBindingObject()
                {
                    AppLogsDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    AppLogsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.AppLogsDetails obj = sender as global::Inventory.Views.AppLogsDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.AppLogsDetails obj)
                {
                    AppLogsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.AppLogsDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.AppLogsDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AppLogsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.AppLogDetailsViewModel obj = sender as global::Inventory.ViewModels.AppLogDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.AppLogDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.AppLogDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AppLogsDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.AppLogModel obj = sender as global::Inventory.Models.AppLogModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item_Id(obj.Id, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_DateTime(obj.DateTime, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_User(obj.User, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_Source(obj.Source, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_Action(obj.Action, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_Type(obj.Type, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Id":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Id(obj.Id, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DateTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_DateTime(obj.DateTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "User":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_User(obj.User, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Source":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Source(obj.Source, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Action":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Action(obj.Action, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Type":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Type(obj.Type, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.AppLogModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Inventory.Models.AppLogModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6: // Views\AppLogs\Details\AppLogsDetails.xaml line 60
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AppLogs\Details\AppLogsDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    AppLogsDetails_obj1_Bindings bindings = new AppLogsDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // Views\AppLogs\Details\AppLogsDetails.xaml line 13
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AppLogsDetails_obj3_Bindings bindings = new AppLogsDetails_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

